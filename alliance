#!/bin/sh

## read encrypted data set
export $(gpg --decrypt /etc/conf.d/alliance.data.asc 2>/dev/null)

## functions
iface_up () {
    if (( UID != 0 )); then
        echo "error: you cannot perform this operation unless you are root."
    else
        iface_down

        ip link set dev eth0 up
        ip addr add $ALLIANCE_IP/$ALLIANCE_NETMASK broadcast '+' dev eth0

        ip route add default via $ALLIANCE_GATEWAY

        echo "nameserver $ALLIANCE_DNS1" > /etc/resolv.conf
        echo "nameserver $ALLIANCE_DNS2" >> /etc/resolv.conf
    fi
}

iface_down () {
    ip addr flush dev eth0
    ip link set dev eth0 down
}

all_login () {
    if (( UID == 0 )); then
        echo "error: you cannot perform this operation as root."
    else
        curl -s --cookie cjar  --data "user=$ALLIANCE_USERNAME" \
            --data "pass=$ALLIANCE_PASSWORD" \
            --data 'login=Login' $ALLIANCE_LOGIN_PAGE >/dev/null

        user_agent="Mozilla/5.0 (Windows; U; Windows NT 5.1; de; rv:1.9.2.3)"\
" Gecko/20100401 Firefox/3.6.3"
        ip=$(curl -sA $user_agent http://whatismyipaddress.com/ | \
            grep "LOOKUPADDRESS" | \
            sed 's/.*value="\([0-9.]*\).*/\1/')
        if [[ -z $ip ]]; then
            echo "error connecting to network"
        else
            echo "IP :: $ip"
        fi
    fi
}

all_logout () {
    if (( UID == 0 )); then
        echo "error: you cannot perform this operation as root."
    else
        curl -sF 'logout=1' $ALLIANCE_LOGIN_PAGE
    fi
}

all_expiry () {
    expiry=$(curl -s http://10.13.1.1/0/up/ | \
        grep "Expiry date" | \
        sed -re 's/.*left">([0-9.]*)<span.*/\1/' \
        -e 's/([0-9]*).([0-9]*).([0-9]*)/\2\/\1\/\3/')
    if [[ -z $expiry ]]; then
        echo "error connecting to network"
    else
        expiry_date=$(date --date "$expiry" +"%d-%b-%Y")
        echo "Subscription expires on :: $expiry_date"
    fi
}

usage () {
    cat <<EOF
Usage:   $(basename $0) [options]

 Basic options:
    -s        setup network connection
    -l        login to alliance network [default]
    -x        logout from alliance network
    -e        print expiry date to STDOUT
    -h        show help
EOF
}


## main execution
while getopts ":sxleh" opt; do
    case $opt in
        s)
            iface_up
            ;;
        x)
            all_logout
            ;;
        l)
            all_login
            ;;
        e)
            all_expiry
            ;;
        h)
            usage
            ;;
        \?)
            echo "invalid option: -$OPTARG" >&2
            usage
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            usage
            exit 1
            ;;
    esac
done

if (( $# == 0 )); then
    all_login
fi
